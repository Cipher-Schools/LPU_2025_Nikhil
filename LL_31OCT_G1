// Online C++ compiler to run C++ program online
#include <bits/stdc++.h>
using namespace std;

struct Node{
    int data;
    Node* next;
    Node* prev;
    
    Node(int value){
        data = value;
        next = nullptr;
        prev = nullptr;
    }
};

void printLL( Node* head){
    Node* p = head;
    
    while(p!=NULL){
        cout<<p->data<<" ";
        p = p->next;
    }
}

void insertionDoublyLL(Node* head,int val,int pos){
    Node* p = head;
    Node*q = nullptr;
    
    for(int i = 1 ;i<pos;i++){
        q=p;
        p=p->next;
    }
    
    Node* newNode = new Node(val);
    newNode->next = p;
    newNode->prev = q;
    
    q->next = newNode;
    p->prev  = newNode;
    
}

void insertionDoublyLLTail(Node* head,int val){
    Node* p = head;
    
  while(p->next!=NULL){
        p=p->next;
    }
    
    Node* newNode = new Node(val);
    p->next = newNode;
    newNode->prev = p;
    
}



void insertionDoublyLLHead(Node* head,int val){

    Node* newNode = new Node(val);
    newNode->next = head;
    head->prev = newNode;
    
    head= newNode;
}

void deletionatanyPos(Node* head,int pos){
    Node* p = head;
    Node* q = nullptr;
    
    for(int i = 1;i<pos;i++){
        q=p;
        p=p->next;
        
    }
    
    q->next = p->next;
    p->next->prev = q;
    delete p;
    
}

void deletionatHead(Node* &head,int pos){
   
   Node* p = head;
   head = head->next;
   head->prev = nullptr;
   
   delete p;
    
}

int count(Node* head){
    Node* p = head;
    int count =0;
    while(p!=nullptr){
        count++;
        p = p->next;
    }
    return count;
}


int main() {
    
    // Node* head = new Node(12);
    // head->next = new Node(22);
    // head->next->prev =head;
    
    
    // head->next->next = new Node(32);
    // head->next->next->prev = head->next;
    
    
     Node* head = new Node(12);
    head->next = new Node(22);
    head->next->next = new Node(32);
    head->next->next->next = new Node(42);
    head->next->next->next->next = new Node(52);
    
    
    printLL(head);
    cout<<endl;
    
    
    //slow and fast pointers
    
    
    // int cnt = count(head);
    // int pos = cnt/2;
    
    // Node* p = head;
    
    // for(int i =1;i<=pos ;i++){
    //     p = p->next;
    // }
    
    // cout<<p->data;
    
    Node* p = head;
    Node* q = head;
    
    while(p->next!=nullptr && p->next->next !=nullptr){
        p = p->next->next;
        q=q->next;
    }
    
    cout<<q->data;
    

    return 0;
}
